name: .NET

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get Github action IP
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-name launch-wizard-2 --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32    
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build Project
        run: dotnet publish --configuration Release
      - name: Create Docker Image
        run: |
          docker build -t bingbot:latest .
          docker save -o ./bingbot.tar bingbot:latest
          gzip bingbot.tar
      - name: Transfer Image to Server
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.HOSTNAME  }}
          USER_NAME : ${{ secrets.USERNAME  }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key ./bingbot.tar.gz ${USER_NAME}@${HOSTNAME}:/tmp/

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.HOSTNAME  }}
          USER_NAME : ${{ secrets.USERNAME  }}
          DISCORD_API_KEY : ${{ secrets.DISCORD_API_KEY  }}
          TTS_COOKIE : ${{ secrets.TTS_COOKIE  }}
          TTS_HOST : ${{ secrets.TTS_HOST  }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            cd /tmp/ &&
            sudo docker stop bingbot &&
            sudo docker rm bingbot || true &&
            sudo docker rmi bingbot:latest || true &&
            sudo docker load -i bingbot.tar.gz &&
            sudo rm bingbot.tar.gz &&
            sudo docker run -d --env DISCORD_API_KEY=$DISCORD_API_KEY --env TTS_COOKIE=$TTS_COOKIE --env TTS_HOST=$TTS_HOST --env REDDIT_CLIENT_ID=$REDDIT_CLIENT_ID --env REDDIT_REFRESH_TOKEN=$REDDIT_REFRESH_TOKEN --env REDDIT_CLIENT_SECRET=$REDDIT_CLIENT_SECRET --env TWITCH_CLIENT_ID=$TWITCH_CLIENT_ID --env TWITCH_CLIENT_ACCESS_TOKEN=$TWITCH_CLIENT_ACCESS_TOKEN --env ELEVEN_LABS_API_KEY=$ELEVEN_LABS_API_KEY --name bingbot bingbot:latest
          '

      - name: Remove Github Actions IP from security group
        run: |
          aws ec2 revoke-security-group-ingress --group-name launch-wizard-2 --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        if: always()
